# @乘风小栈

name: 编译 Azkabna 4.0
on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'
  watch:
    types: [started]
env:
  REPO_URL: https://github.com/azkaban/azkaban
  CONFIG_FILE: build.gradle
  UPLOAD_RELEASE: true
  REMOVE_WORKFLOW_RUNS: true
  REMOVE_OLD_RELEASE: true
  
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization Environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo $JAVA_HOME
        echo `java -version`
        docker rmi `docker images -q`
        echo "Deleting docker files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: 准备更新依赖
      run: |
        sudo apt-get update
        sudo apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync

    - name: 克隆仓库
      run: |
        git clone --branch 4.0.0 $REPO_URL  azkaban
        ln -sf /workdir/azkaban $GITHUB_WORKSPACE/azkaban

    - name: 导入配置
      run: |
        [ -f $CONFIG_FILE ] && mv $CONFIG_FILE ./azkaban
    
        
    - name: 编译
      run: |    
        cd azkaban
        pwd
        ls
        ./gradlew build installDist -x test 

    - name: CD
      run: |
        cd azkaban
        mkdir -p ./results
        chmod 777 ./results
        pwd
        ls
        cp -r azkaban-db/build/distributions/* ./results
        cp -r azkaban-exec-server/build/distributions/*  ./results
        cp -r azkaban-web-server/build/distributions/*  ./results
        cp -r azkaban-solo-server/build/distributions/*  ./results
        echo '======================='
        ls ./results

    - name: Upload Firmware to Releases
      uses: softprops/action-gh-release@v1
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      with:
        name: Azkaban4.0
        tag_name: az4.0
        body: 编译好的资源
        files: /home/runner/work/BuidAzka/BuidAzka/azkaban/results
#    - name: Upload  to Releases
#       uses: softprops/action-gh-release@v1
#       if: env.UPLOAD_RELEASE == 'true' && !cancelled()
#       env:
#         GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
#       with:
#         name: Azkaban-src-4.0
#         tag_name: 4.0.0
#         body: azkaban-src-data
#         files: azkaban/results/*
#     - name : Upload artifact 
#       uses: actions/upload-artifact@master
#       with:
#         name: azkaban4.0-src
#         path: azkaban/results
         
#	 - name: Remove old Release
#	   uses: dev-drprasad/delete-older-releases@v0.1.0
#	   if: env.REMOVE_OLD_RELEASE == 'true' && !cancelled()
#	   with:
#		 keep_latest: 0
#		 delete_tags: true
#	   env:
#		 GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
 
     
    
    
    - name: Remove workflow runs
      uses: GitRML/delete-workflow-runs@main
      if: env.REMOVE_WORKFLOW_RUNS == 'true' && !cancelled()
      with:
        token: ${{ secrets.RELEASE_TOKEN }}
        retain_days: 1
        keep_minimum_runs: 2